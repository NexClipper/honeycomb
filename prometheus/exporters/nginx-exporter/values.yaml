# Default values for nginx-exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

global:
  managed: exporterhub

rbac:
  # Specifies whether RBAC resources should be created
  create: true
  pspEnabled: true
  pspUseAppArmor: true
serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: false
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name: 

image:
  repository: nginx/nginx-prometheus-exporter
  tag: 0.9.0
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

# Add your nginx server details here
nginxServer: "http://{{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local:8080/stub_status"
#nginxServer: "http://frontend.default.svc.cluster.local:8080/stub_status"

# Arguments - https://github.com/nginxinc/nginx-prometheus-exporter#command-line-arguments
options: {}
  # -nginx.plus
  # -nginx.retries int

service:
  type: NodePort
  port: 9113
  annotations: {}

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

serviceMonitor:
  # When set true then use a ServiceMonitor to configure scraping
  enabled: false
  # Set the namespace the ServiceMonitor should be deployed
  # namespace: monitoring
  # Set how frequently Prometheus should scrape
  # interval: 30s
  # Set path to nginx-exporter telemtery-path
  # telemetryPath: /metrics
  # Set labels for the ServiceMonitor, use this to define your scrape label for Prometheus Operator
  # labels:
  # Set timeout for scrape
  # timeout: 10s
  # Set of labels to transfer on the Kubernetes Service onto the target.
  # targetLabels: []
  # metricRelabelings: []

nodeSelector: {}

tolerations: []

affinity: {}

# Extra environment variables
extraEnv: []

# Init Containers for Exporter Pod
initContainers: []

# Extra containers for the exporter pod
extraContainers: []

# Extra Volumes for the pod
extraVolumes: []
# - name: example
#   configMap:
#     name: example

# Extra Volume Mounts for the exporter container
extraVolumeMounts: []
# - name: example
#   mountPath: /example
